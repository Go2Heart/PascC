
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDOP ARRAY ASSIGN BCONST BEGIN BOOLEAN CCONST CHAR COLON COMMA CONST DO DOT DOTDOT DOWNTO ELSE END EOF EQU FOR FORWARD FUNCTION ICONST ID IF INOP INTEGER LBRACK LCURL LPAREN MULDIVANDOP NOTOP OF OROP PROCEDURE PROGRAM RBRACK RCONST RCURL READ REAL RECORD RELOP RPAREN SEMI SET STRING THEN TO TYPE VAR WHILE WITH WRITEprogram : program_head SEMI program_body DOTprogram_head : PROGRAM ID \n                        | PROGRAM ID LPAREN idlist RPARENidlist : idlist COMMA ID\n                  | IDprogram_body : const_declarations var_declarations const_declarations : CONST const_declaration SEMI\n                              | emptyconst_declaration : ID EQU const_value \n                             | const_declaration SEMI ID EQU const_valueconst_value : ADDOP ICONST\n                       | ICONST\n                       | IDvar_declarations : VAR var_declaration SEMI\n                            | emptyvar_declaration : idlist COLON type\n                           | var_declaration SEMI idlist COLON typetype : basic_type\n                | ARRAY LBRACK period RBRACK OF basic_typebasic_type : INTEGER\n                      | REAL\n                      | CHAR\n                      | STRINGperiod : ICONST DOTDOT ICONST\n                  | period COMMA ICONST DOTDOT ICONSTempty :'
    
_lr_action_items = {'PROGRAM':([0,],[3,]),'$end':([1,11,],[0,-1,]),'SEMI':([2,5,15,19,23,28,29,31,34,35,37,38,39,40,42,45,46,55,],[4,-2,21,25,-3,-13,-9,-12,-16,-18,-20,-21,-22,-23,-11,-10,-17,-19,]),'ID':([3,8,10,13,21,22,24,25,41,],[5,16,17,17,27,28,32,17,28,]),'CONST':([4,],[8,]),'VAR':([4,7,9,21,],[-26,13,-8,-7,]),'DOT':([4,6,7,9,12,14,21,25,],[-26,11,-26,-8,-6,-15,-7,-14,]),'LPAREN':([5,],[10,]),'EQU':([16,27,],[22,41,]),'RPAREN':([17,18,32,],[-5,23,-4,]),'COMMA':([17,18,20,32,33,47,54,57,],[-5,24,24,-4,24,50,-24,-25,]),'COLON':([17,20,32,33,],[-5,26,-4,43,]),'ADDOP':([22,41,],[30,30,]),'ICONST':([22,30,41,44,50,51,56,],[31,42,31,48,53,54,57,]),'ARRAY':([26,43,],[36,36,]),'INTEGER':([26,43,52,],[37,37,37,]),'REAL':([26,43,52,],[38,38,38,]),'CHAR':([26,43,52,],[39,39,39,]),'STRING':([26,43,52,],[40,40,40,]),'LBRACK':([36,],[44,]),'RBRACK':([47,54,57,],[49,-24,-25,]),'DOTDOT':([48,53,],[51,56,]),'OF':([49,],[52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_head':([0,],[2,]),'program_body':([4,],[6,]),'const_declarations':([4,],[7,]),'empty':([4,7,],[9,14,]),'var_declarations':([7,],[12,]),'const_declaration':([8,],[15,]),'idlist':([10,13,25,],[18,20,33,]),'var_declaration':([13,],[19,]),'const_value':([22,41,],[29,45,]),'type':([26,43,],[34,46,]),'basic_type':([26,43,52,],[35,35,55,]),'period':([44,],[47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_head SEMI program_body DOT','program',4,'p_program','pparser.py',38),
  ('program_head -> PROGRAM ID','program_head',2,'p_program_head','pparser.py',42),
  ('program_head -> PROGRAM ID LPAREN idlist RPAREN','program_head',5,'p_program_head','pparser.py',43),
  ('idlist -> idlist COMMA ID','idlist',3,'p_idlist','pparser.py',51),
  ('idlist -> ID','idlist',1,'p_idlist','pparser.py',52),
  ('program_body -> const_declarations var_declarations','program_body',2,'p_program_body','pparser.py',59),
  ('const_declarations -> CONST const_declaration SEMI','const_declarations',3,'p_const_declarations','pparser.py',63),
  ('const_declarations -> empty','const_declarations',1,'p_const_declarations','pparser.py',64),
  ('const_declaration -> ID EQU const_value','const_declaration',3,'p_const_declaration','pparser.py',69),
  ('const_declaration -> const_declaration SEMI ID EQU const_value','const_declaration',5,'p_const_declaration','pparser.py',70),
  ('const_value -> ADDOP ICONST','const_value',2,'p_const_value','pparser.py',77),
  ('const_value -> ICONST','const_value',1,'p_const_value','pparser.py',78),
  ('const_value -> ID','const_value',1,'p_const_value','pparser.py',79),
  ('var_declarations -> VAR var_declaration SEMI','var_declarations',3,'p_var_declarations','pparser.py',83),
  ('var_declarations -> empty','var_declarations',1,'p_var_declarations','pparser.py',84),
  ('var_declaration -> idlist COLON type','var_declaration',3,'p_var_declaration','pparser.py',89),
  ('var_declaration -> var_declaration SEMI idlist COLON type','var_declaration',5,'p_var_declaration','pparser.py',90),
  ('type -> basic_type','type',1,'p_type','pparser.py',97),
  ('type -> ARRAY LBRACK period RBRACK OF basic_type','type',6,'p_type','pparser.py',98),
  ('basic_type -> INTEGER','basic_type',1,'p_basic_type','pparser.py',105),
  ('basic_type -> REAL','basic_type',1,'p_basic_type','pparser.py',106),
  ('basic_type -> CHAR','basic_type',1,'p_basic_type','pparser.py',107),
  ('basic_type -> STRING','basic_type',1,'p_basic_type','pparser.py',108),
  ('period -> ICONST DOTDOT ICONST','period',3,'p_period','pparser.py',112),
  ('period -> period COMMA ICONST DOTDOT ICONST','period',5,'p_period','pparser.py',113),
  ('empty -> <empty>','empty',0,'p_empty','pparser.py',120),
]
